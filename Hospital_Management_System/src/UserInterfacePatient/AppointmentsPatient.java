/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterfacePatient;

import Doctor.Timings;
import Hospital.Ecosystem;
import Model.Appointments;
import Model.Medicine;
import Roles.Doctor;
import Roles.Patient;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sumanayanakonda
 */
public class AppointmentsPatient extends javax.swing.JPanel {
Ecosystem ecoSystem;
Patient patient;
    /**
     * Creates new form AppointmentsPatient
     */
    public AppointmentsPatient(Ecosystem  ecoSystem, Patient patient) {
        initComponents();
        this. ecoSystem= ecoSystem;
        this.patient=patient;
        TableFilling();
        DefaultComboBoxModel cityModel = new DefaultComboBoxModel();
        cityModel.addElement("");
        for(Doctor d:ecoSystem.getDocdir().getDocList())
        { 
            cityModel.addElement(d.getFirstName()+" "+d.getLastName());
        }
       
        doctor.setModel(cityModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Appt = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        doctor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        Book = new javax.swing.JButton();
        date = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(204, 204, 255));

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        Appt.setBackground(new java.awt.Color(153, 153, 255));
        Appt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Encounter Date", "Temperature", "BloodPressure", "Diagnosis", "Weight", "Height", "Doctor"
            }
        ));
        jScrollPane1.setViewportView(Appt);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Previous Apponintments", jPanel1);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel1.setText("Doctor:");

        doctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        doctor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                doctorItemStateChanged(evt);
            }
        });
        doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        jLabel2.setText("Date:");

        Book.setBackground(new java.awt.Color(153, 153, 255));
        Book.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        Book.setText("Book");
        Book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookActionPerformed(evt);
            }
        });

        text.setBackground(new java.awt.Color(153, 153, 255));
        text.setColumns(20);
        text.setRows(5);
        jScrollPane2.setViewportView(text);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(283, 283, 283)
                        .addComponent(Book))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(doctor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(311, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(Book)
                .addGap(68, 68, 68)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Appointment Booking", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(105, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookActionPerformed
        // TODO add your handling code here:
       for (Doctor d:ecoSystem.getDocdir().getDocList()){
        if(doctor.getSelectedItem().toString().equals(d.getFirstName()+" "+d.getLastName())){
            for(Timings time: ecoSystem.getTimingsdirectory().getTimingList()){
              if(time.getDoctor().equals(d)){
                 if((date.getDate().compareTo(time.getEnddate())<0)&&(date.getDate().compareTo(time.getStartdate())>0)){
                 
        String doctorname = doctor.getSelectedItem().toString();
        Date dates = date.getDate();
        text.setText("Your Apponintments is successfully booked on "+dates+". Dr "+doctorname+" will see you then!");
        
        Appointments e = new Appointments(dates, "0", "0", 0, 0, "", patient, d );
        
        ecoSystem.getAppdir().getAppointmentList().add(e);
                 
                 return;
                 
                 
                 } 
              
                 else{
                 
                 JOptionPane.showMessageDialog(this, "Enter Dates within the range of "+time.getStartdate()+" to "+time.getEnddate());
                 
                 }
              
              }}}}
        String doctorname = doctor.getSelectedItem().toString();
        Date dates = date.getDate();
        text.setText("Your Apponintments is successfully booked on "+dates+". Dr "+doctorname+" will see you then!");
        for(Doctor en : ecoSystem.getDocdir().getDocList())
        {if (doctorname.equals(en.getFirstName()+" "+en.getLastName()))
            {  
        Appointments e = new Appointments(dates, "0", "0", 0, 0, "", patient, en );
        
        ecoSystem.getAppdir().getAppointmentList().add(e);}}
    }//GEN-LAST:event_BookActionPerformed

    private void doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_doctorActionPerformed

    private void doctorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_doctorItemStateChanged
        // TODO add your handling code here:
        for (Doctor d:ecoSystem.getDocdir().getDocList()){
        if(doctor.getSelectedItem().toString().equals(d)){
            for(Timings time: ecoSystem.getTimingsdirectory().getTimingList()){
              if(time.getDoctor().equals(d)){
                date.getJCalendar().setMinSelectableDate(time.getStartdate());
                date.getJCalendar().setMaxSelectableDate(time.getEnddate());     }}}}
    }//GEN-LAST:event_doctorItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Appt;
    private javax.swing.JButton Book;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JComboBox<String> doctor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea text;
    // End of variables declaration//GEN-END:variables

    private void TableFilling() {
    DefaultTableModel model = (DefaultTableModel) Appt.getModel();
        model.setRowCount(0);
        for(Appointments en : ecoSystem.getAppdir().getAppointmentList())
             if (patient.getEmailId().equals(en.getPatient().getEmailId())){
            {    
            Object[] row = new Object[7];
            row[0] = en.getEncounterDate();
            row[1] = en.getTemperature();
            row[2] = en.getBloodPressure();
            row[3] = en.getDiagnosis();
            row[4] = en.getWeight();
            row[5] = en.getHeight();
            row[6] = en.getDoctor().getFirstName()+en.getDoctor().getLastName();
            model.addRow(row);
            }
             }
    
    }
}
